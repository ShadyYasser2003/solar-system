name: reuseable-workflow

on:
  workflow_call:
   secrets:
      DOCKER_USERNAME: 
        required: true
      MONGO_USERNAME:
        required: true
      MONGO_PASSWORD: 
        required: true
   inputs:
      MONGO_URL:
        required: true
        type: string

jobs:

  reuse-deploy:
    runs-on: self-hosted
    environment: 
      name: development
      url: ${{ steps.set_ingress_ip.outputs.SET_INGRESS_IP }}
    outputs:
      ingress_ip: ${{ steps.set_ingress_ip.outputs.SET_INGRESS_IP }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Use Minikube context
        run: |
          kubectl config use-context minikube
          kubectl cluster-info

      - name: Save Nginx Ingress Controller IP
        id: set_ingress_ip
        run: |
          INGRESS_IP=$(minikube ip)
          echo "INGRESS_IP=$INGRESS_IP" >> $GITHUB_ENV
          echo "SET_INGRESS_IP=$INGRESS_IP" >> $GITHUB_OUTPUT

      - name: Replace Token in Manifest files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '__'
          tokenSuffix: '__'
          files: '["kubernetes/development/*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ secrets.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}

      - name: Check Kubernetes manifests
        run: cat kubernetes/development/*.yaml

      - name: Create namespace if not exists
        run: |
          kubectl create namespace ${{ vars.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
        
      - name: Create MongoDB Secret
        run: |
          kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
          --from-literal=MONGO_URL='${{ inputs.MONGO_URL }}' \
          --from-literal=MONGO_USERNAME='${{ secrets.MONGO_USERNAME }}' \
          --from-literal=MONGO_PASSWORD='${{ secrets.MONGO_PASSWORD }}' \
          --save-config \
          --dry-run=client \
          -o yaml | kubectl apply -f -
        
      - name: Deploy to Dev Env
        run: kubectl apply -f kubernetes/development/

    